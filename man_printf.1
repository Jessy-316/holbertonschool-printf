.TH PRINTF 1 printf\-0.1
.SH NAME
printf \- prints a formatted output
.SH SYNOPSIS
.B printf (format) (Argument)
.B int _printf(const char *format, ...);
.B int print_char(va_list);
.B int print_str(va_list args);
.B int print_int(va_list args);
.SH DESCRIPTIONS
.B Performs a print command action according to the selected format.
The int _printf(constant char *format,..) declares a function called _printf,
followed by its arguments. The va_list holds the variable arguments and 
args desclares the variable type. The function will check the string
if its NULL which will printi a count as a result, if not then it will
 call a function using _putchar adding 1 to the count. Characters are 
printed directly or interpreted as specifiers, along with the arguments called.
.SH EXAMPLE
.B #include main.h
int _printf(const char *format, ...)
{
	int i, count = 0;

	va_list args;

	va_start(args, format);

	if (format != NULL)
	{
		for (i = 0; format[i] != '\0'; i++)
		{
			if (format[i] == '%' && format[i + 1] != '\0')
			{
				int print = get_op_format(format[i + 1], args);

				if (print != 0)
				{
					count += print;
					i++;
				}
				else
				{
					count += _putchar(format[i]);
				}
			}
			else
			{
				count += _putchar(format[i]);
			}
		}
	}
	va_end(args);

	return (count);
}
